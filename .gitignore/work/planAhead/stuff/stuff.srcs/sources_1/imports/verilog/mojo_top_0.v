/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip,
    input [4:0] button
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [7-1:0] M_seg_seg;
  wire [4-1:0] M_seg_sel;
  reg [16-1:0] M_seg_values;
  multi_seven_seg_2 seg (
    .clk(clk),
    .rst(rst),
    .values(M_seg_values),
    .seg(M_seg_seg),
    .sel(M_seg_sel)
  );
  wire [1-1:0] M_statemachine_clock1;
  wire [1-1:0] M_statemachine_clock2;
  wire [1-1:0] M_statemachine_clock3;
  wire [1-1:0] M_statemachine_clock4;
  wire [1-1:0] M_statemachine_clock5;
  wire [1-1:0] M_statemachine_clock6;
  wire [1-1:0] M_statemachine_clock7;
  wire [1-1:0] M_statemachine_clock8;
  wire [1-1:0] M_statemachine_bloat1;
  wire [1-1:0] M_statemachine_bloat2;
  wire [1-1:0] M_statemachine_bloat3;
  wire [1-1:0] M_statemachine_bloat4;
  wire [1-1:0] M_statemachine_bloat5;
  wire [16-1:0] M_statemachine_io_value;
  wire [1-1:0] M_statemachine_out;
  reg [1-1:0] M_statemachine_b_0;
  reg [1-1:0] M_statemachine_b_1;
  reg [1-1:0] M_statemachine_b_2;
  reg [1-1:0] M_statemachine_b_3;
  reg [1-1:0] M_statemachine_b_4;
  reg [1-1:0] M_statemachine_s;
  finitestatemachine2_3 statemachine (
    .clk(clk),
    .rst(rst),
    .b_0(M_statemachine_b_0),
    .b_1(M_statemachine_b_1),
    .b_2(M_statemachine_b_2),
    .b_3(M_statemachine_b_3),
    .b_4(M_statemachine_b_4),
    .s(M_statemachine_s),
    .clock1(M_statemachine_clock1),
    .clock2(M_statemachine_clock2),
    .clock3(M_statemachine_clock3),
    .clock4(M_statemachine_clock4),
    .clock5(M_statemachine_clock5),
    .clock6(M_statemachine_clock6),
    .clock7(M_statemachine_clock7),
    .clock8(M_statemachine_clock8),
    .bloat1(M_statemachine_bloat1),
    .bloat2(M_statemachine_bloat2),
    .bloat3(M_statemachine_bloat3),
    .bloat4(M_statemachine_bloat4),
    .bloat5(M_statemachine_bloat5),
    .io_value(M_statemachine_io_value),
    .out(M_statemachine_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    io_led = 24'h000000;
    M_seg_values = 16'h8800;
    io_seg = ~M_seg_seg;
    io_sel = ~M_seg_sel;
    M_statemachine_b_0 = io_button[0+0-:1];
    M_statemachine_b_1 = io_button[1+0-:1];
    M_statemachine_b_2 = io_button[2+0-:1];
    M_statemachine_b_3 = io_button[3+0-:1];
    M_statemachine_b_4 = io_button[4+0-:1];
    M_seg_values = M_statemachine_io_value;
    io_led[16+0+0-:1] = M_statemachine_bloat1;
    io_led[16+1+0-:1] = M_statemachine_bloat2;
    io_led[16+2+0-:1] = M_statemachine_bloat3;
    io_led[16+3+0-:1] = M_statemachine_bloat4;
    io_led[16+4+0-:1] = M_statemachine_bloat5;
    M_statemachine_s = io_dip[16+0+0-:1];
    io_led[0+0+0-:1] = M_statemachine_clock1;
    io_led[0+1+0-:1] = M_statemachine_clock2;
    io_led[0+2+0-:1] = M_statemachine_clock3;
    io_led[0+3+0-:1] = M_statemachine_clock4;
    io_led[0+4+0-:1] = M_statemachine_clock5;
    io_led[0+5+0-:1] = M_statemachine_clock6;
    io_led[0+6+0-:1] = M_statemachine_clock7;
    io_led[0+7+0-:1] = M_statemachine_clock8;
  end
endmodule
